{"timestamp":"2025-09-12T10:30:01.453297","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-12T10:30:01.459012","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/weather_pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-12T10:30:03.031083","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-09-12T10:30:03.158647","level":"info","event":"Connection Retrieved 'airflow_db'","logger":"airflow.hooks.base"}
{"timestamp":"2025-09-12T10:30:03.799640","level":"info","event":"####(1) Fetch raw weather data ()","logger":"root"}
{"timestamp":"2025-09-12T10:30:03.802704","level":"info","event":"Done. Returned value was: {'records': (), 'columns': ['id', 'location', 'country', 'localtime', 'temperature', 'feels_like', 'condition', 'humidity', 'pressure', 'gust', 'api_source', 'created_at', 'updated_at']}","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}
{"timestamp":"2025-09-12T10:30:03.804329","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01993d79-8e0d-7348-b29a-15ac37253f7d'), task_id='extract_weather_data', dag_id='weather_pipeline', run_id='scheduled__2025-09-12T10:30:00+00:00', try_number=1, map_index=-1, hostname='da3462be05d0', context_carrier=None, task=<Task(_PythonDecoratedOperator): extract_weather_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 9, 12, 10, 30, 0, 812649, tzinfo=TzInfo(UTC)), end_date=None, is_mapped=False)","logger":"task"}
