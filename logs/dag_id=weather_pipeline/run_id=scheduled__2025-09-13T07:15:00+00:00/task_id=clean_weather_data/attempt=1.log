{"timestamp":"2025-09-13T07:15:03.393395","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-13T07:15:03.394176","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/weather_pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-13T07:15:03.680388","level":"info","event":"####(2) cleaning weather data Empty DataFrame\nColumns: [id, location, country, localtime, temperature, feels_like, condition, humidity, pressure, gust, api_source, created_at, updated_at]\nIndex: []","logger":"root"}
{"timestamp":"2025-09-13T07:15:03.681297","level":"info","event":"Done. Returned value was: {'records': [], 'columns': ['id', 'location', 'country', 'localtime', 'temperature', 'feels_like', 'condition', 'humidity', 'pressure', 'gust', 'api_source', 'created_at', 'updated_at']}","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}
{"timestamp":"2025-09-13T07:15:03.681408","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019941ed-651c-75a5-aad7-b69c4c143b4d'), task_id='clean_weather_data', dag_id='weather_pipeline', run_id='scheduled__2025-09-13T07:15:00+00:00', try_number=1, map_index=-1, hostname='da3462be05d0', context_carrier=None, task=<Task(_PythonDecoratedOperator): clean_weather_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 9, 13, 7, 15, 3, 170562, tzinfo=TzInfo(UTC)), end_date=None, is_mapped=False)","logger":"task"}
